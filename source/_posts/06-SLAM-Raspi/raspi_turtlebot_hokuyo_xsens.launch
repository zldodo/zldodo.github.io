<launch>
  <!-- Turtlebot -->
  <arg name="base"              default="$(env TURTLEBOT_BASE)"         doc="mobile base type [create, roomba]"/>
  <arg name="battery"           default="$(env TURTLEBOT_BATTERY)"      doc="kernel provided locatio for battery info, use /proc/acpi/battery/BAT0 in 2.6 or earlier kernels." />
  <arg name="stacks"            default="$(env TURTLEBOT_STACKS)"       doc="stack type displayed in visualisation/simulation [circles, hexagons]"/>
  <arg name="3d_sensor"         default="$(env TURTLEBOT_3D_SENSOR)"    doc="3d sensor types [kinect, asux_xtion_pro, hokuyo]"/>
  <arg name="simulation"        default="$(env TURTLEBOT_SIMULATION)"   doc="set flags to indicate this turtle is run in simulation mode."/>
  <arg name="serialport"        default="$(env TURTLEBOT_SERIAL_PORT)"  doc="used by create to configure the port it is connected on [/dev/ttyUSB0, /dev/ttyS0]"/>

 <param name="/use_sim_time" value="false" />

  <include file="$(find turtlebot_bringup)/launch/includes/myrobot.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="stacks" value="$(arg stacks)" />
    <arg name="3d_sensor" value="$(arg 3d_sensor)" />
  </include>
  <include file="$(find turtlebot_bringup)/launch/includes/mobile_base.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="serialport" value="$(arg serialport)" />
  </include>
  <include unless="$(eval arg('battery') == 'None')" file="$(find turtlebot_bringup)/launch/includes/netbook.launch.xml">
    <arg name="battery" value="$(arg battery)" />
  </include>

  <node name="hokuyo" pkg="urg_node" type="urg_node">
      <param name="port" type="string" value="/dev/ttyACM0"/>
      <param name="frame_id" value="base_laser_link" />
  </node>

    <!-- parameters -->
    <arg name="device" default="auto" doc="device file of the IMU"/>
    <arg name="baudrate" default="152000" doc="baudrate of the IMU"/>
    <arg name="timeout" default="0.01" doc="timeout for the IMU communication"/>
    <arg name="frame_id" default="/imu" doc="frame id of the IMU"/>
    <arg name="frame_local" default="ENU" doc="desired frame orientation (ENU, NED or NWU)"/>
    <arg name="no_rotation_duration" default="0" doc="duration (int in seconds) of the no-rotation calibration procedure"/>

    <!-- node -->
  <node pkg="xsens_driver" type="mtnode.py" name="xsens_driver" output="screen" >
    <param name="device" value="$(arg device)"/>
    <param name="baudrate" value="$(arg baudrate)"/>
    <param name="timeout" value="$(arg timeout)"/>
    <param name="frame_id" value="imu_link"/>
    <param name="frame_local" value="$(arg frame_local)"/>
    <param name="no_rotation_duration" value="$(arg no_rotation_duration)"/>
  </node>


  <node name="flat_world_imu_node" pkg="cartographer_turtlebot"
      type="cartographer_flat_world_imu_node" output="screen">
    <remap from="imu_in" to="/imu/data" />
    <remap from="imu_out" to="/imu" />
  </node>

</launch>
